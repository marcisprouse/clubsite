# Generated by Django 3.2.6 on 2021-08-21 00:15

import address.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import easy_thumbnails.fields
import userena.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('address', '0004_auto_20210820_0950'),
        ('certificates', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='MyProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mugshot', easy_thumbnails.fields.ThumbnailerImageField(blank=True, help_text='A personal image displayed in your profile.', upload_to=userena.models.upload_to_mugshot, verbose_name='Member Photo')),
                ('privacy', models.CharField(choices=[('open', 'Open'), ('registered', 'Registered'), ('closed', 'Closed')], default='registered', help_text='Designates who can view your profile.', max_length=15, verbose_name='privacy')),
                ('is_active_member', models.BooleanField(default=False, help_text='This person is an active member. Could be a qualifying home-owner or renter. Usually landlord qualifying home-owner is not an active member. Check if true. Leave blank if false.')),
                ('is_a_member_full_time_resident', models.BooleanField(default=False, help_text='This active member lives in our neighborhood all months of the year. Check if true. Leave blank if false.')),
                ('is_a_renter_member', models.BooleanField(default=False, help_text='This active member is renting a home owned by a landlord who has transferred their membership to them. Check if true. Leave blank if false.')),
                ('is_a_member_part_time_resident', models.BooleanField(default=False, help_text='This active member does not live in our neighborhood all months of the year. Check if true. Leave blank if false.')),
                ('is_a_landlord_with_transferred_membership', models.BooleanField(default=False, help_text='This person owns a qualifying home with a membership certificate, but has transferred their membership to their renter. Check if true. Leave blank if false.')),
                ('is_other', models.BooleanField(default=False, help_text="Check if this person doesn't fit other boxes.  May be community contact person.")),
                ('favorite_snack', models.CharField(blank=True, max_length=125, verbose_name='Favorite Snack')),
                ('landlord_away_address', address.models.AddressField(blank=True, help_text='Only enter if this profile owns a home with a membership, but their renters use the membership; enter their away address here. Leave blank if does not apply.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='landlord_away_address', to='address.address')),
                ('member_coyote_lakes_qualifying_address', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='member_coyote_lakes_qualifying_address', to='certificates.certificate')),
                ('member_part_time_away_address', address.models.AddressField(blank=True, help_text='Only enter if this profile has two homes and go away for summer, but they hold the Coyote Lakes membership, not a renter; enter their away address here. Leave blank if does not apply.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='member_part_time_away_address', to='address.address')),
                ('other_contact_address', address.models.AddressField(blank=True, help_text='Only enter if this profile is a non-member contact; enter address here. Leave blank if does not apply.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='other_contact_address', to='address.address')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='my_profile', to=settings.AUTH_USER_MODEL, verbose_name='user')),
            ],
            options={
                'permissions': (('view_profile', 'Can view profile'),),
                'abstract': False,
                'default_permissions': ('add', 'change', 'delete'),
            },
        ),
    ]
